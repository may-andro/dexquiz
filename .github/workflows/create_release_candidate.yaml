name: Build release pr and upload prod to playstore

on:
  push:
    tags:
      - '*-prod'

concurrency:
  # only one running workflow for a ref (branch, tag)
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze_and_test:
    uses: ./.github/workflows/_analyze_and_test_app.yaml

  build_android_kanto:
    uses: ./.github/workflows/_build_android.yaml
    needs: analyze_and_test
    with:
      flavor: kanto
      target: lib/flavors/kanto/main_kanto.dart
      build_env: prod
      upload_to_github: 'false'
      upload_to_firebase: 'true'
      upload_to_play_store: 'false'
    secrets:
      SIGNING_KEYSTORE: ${{ secrets.KANTO_KEYSTORE }}
      SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
      SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      FIREBASE_APP_ID: ${{ secrets.KANTO_ANDROID_FIREBASE_APP_ID }}
      CREDENTIAL_FILE_CONTENT: ${{ secrets.KANTO_CREDENTIAL_FILE_CONTENT }}
      PLAYSTORE_SERVICE_ACCOUNT_JSON: ${{ secrets.KANTO_PLAYSTORE_SERVICE_ACCOUNT_JSON }}

  build_android_johto:
    uses: ./.github/workflows/_build_android.yaml
    needs: analyze_and_test
    with:
      flavor: johto
      target: lib/flavors/johto/main_johto.dart
      build_env: prod
      upload_to_github: 'false'
      upload_to_firebase: 'true'
      upload_to_play_store: 'false'
    secrets:
      SIGNING_KEYSTORE: ${{ secrets.JOHTO_KEYSTORE }}
      SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
      SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      FIREBASE_APP_ID: ${{ secrets.JOHTO_ANDROID_FIREBASE_APP_ID }}
      CREDENTIAL_FILE_CONTENT: ${{ secrets.JOHTO_CREDENTIAL_FILE_CONTENT }}
      PLAYSTORE_SERVICE_ACCOUNT_JSON: ${{ secrets.JOHTO_PLAYSTORE_SERVICE_ACCOUNT_JSON }}

  create_release_pull_request:
    name: Create release branch and pull request to main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Git user config
        run: |
          git config --global user.email "mayank271993@gmail.com"
          git config --global user.name "Continuous Integration"

      - name: Set version from tag
        run: |
          if [ "$GITHUB_REF_TYPE" != "tag" ]
          then
            echo "Ref name $GITHUB_REF_NAME is not a tag but a $GITHUB_REF_TYPE, not setting version number"
          else
            version=$(echo $GITHUB_REF_NAME | sed "s/-prod//" | sed "s/+.*//") && sed -i "s/^version: .*$/version: $version/g" pubspec.yaml
            branch_name="release-${version}"
            git checkout -b $branch_name
            git commit --all -m "Prepare release ${version}"
            git push origin $branch_name
            gh pr create --base main --head $branch_name --title "New Release ${version}" --body "Prepare the new release for ${version}"
          fi