name: Build Pokedex

on:
  workflow_call:
    inputs:
      flavor:
        type: string
        required: true

jobs:
  build_pokedex:
    runs-on: ubuntu-latest

    env:
      DART_SDK_VERSION: 3.1.2
      PATH_POKEDEX_BUILDER: ./tools/pokedex_builder

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup dart environment
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ env.DART_SDK_VERSION }}

      - name: Format the Dart code
        working-directory: ${{ env.PATH_POKEDEX_BUILDER }}
        run: dart format . --set-exit-if-changed

      - name: Run the code generators
        working-directory: ${{ env.PATH_POKEDEX_BUILDER }}
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Install dependencies for pokedex_builder
        working-directory: ${{ env.PATH_POKEDEX_BUILDER }}
        run: dart pub get

      - name: Statically analyze the Dart code
        working-directory: ${{ env.PATH_POKEDEX_BUILDER }}
        run: dart analyze

      - name: Run the unit tests
        working-directory: ${{ env.PATH_POKEDEX_BUILDER }}
        run: dart test --file-reporter="json:test-results.json"

      - name: Generate the test report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Test Results
          path: test-results.json
          reporter: dart-json
          working-directory: ${{ env.WORKING_DIR }}

      - name: Create JSON File
        id: create-json
        run: echo '' > temporary.json

      - name: Fetch, build and create firestore collection json
        working-directory: ${{ env.PATH_POKEDEX_BUILDER }}
        run: dart bin/pokedex_builder.dart build --flavor ${{ inputs.flavor }} --path temporary.json

      - name: Print the created json file
        run: cat temporary.json


